# Copyright (C) 2019-2021  The SymbiFlow Authors.
#
# Use of this source code is governed by a ISC-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/ISC
#
# SPDX-License-Identifier: ISC


tags:
  5.6:
    - 'accept_on'
    - 'default'
    - 'forkjoin'
    - 'alias'
    - 'defparam'
    - 'function'
    - 'always'
    - 'design'
    - 'generate'
    - 'always_comb'
    - 'disable'
    - 'genvar'
    - 'always_ff'
    - 'dist'
    - 'global'
    - 'always_latch'
    - 'do'
    - 'highz0'
    - 'and'
    - 'edge'
    - 'highz1'
    - 'assert'
    - 'else'
    - 'if'
    - 'assign'
    - 'end'
    - 'iff'
    - 'assume'
    - 'endcase'
    - 'ifnone'
    - 'automatic'
    - 'endchecker'
    - 'ignore_bins'
    - 'before'
    - 'endclass'
    - 'illegal_bins'
    - 'begin'
    - 'endclocking'
    - 'implements'
    - 'bind'
    - 'endconfig'
    - 'implies'
    - 'bins'
    - 'endfunction'
    - 'import'
    - 'binsof'
    - 'endgenerate'
    - 'incdir'
    - 'bit'
    - 'endgroup'
    - 'include'
    - 'break'
    - 'endinterface'
    - 'initial'
    - 'buf'
    - 'endmodule'
    - 'inout'
    - 'bufif0'
    - 'endpackage'
    - 'input'
    - 'bufif1'
    - 'endprimitive'
    - 'inside'
    - 'byte'
    - 'endprogram'
    - 'instance'
    - 'case'
    - 'endproperty'
    - 'int'
    - 'casex'
    - 'endspecify'
    - 'integer'
    - 'casez'
    - 'endsequence'
    - 'interconnect'
    - 'cell'
    - 'endtable'
    - 'interface'
    - 'chandle'
    - 'endtask'
    - 'intersect'
    - 'checker'
    - 'enum'
    - 'join'
    - 'class'
    - 'event'
    - 'join_any'
    - 'clocking'
    - 'eventually'
    - 'join_none'
    - 'cmos'
    - 'expect'
    - 'large'
    - 'config'
    - 'export'
    - 'let'
    - 'const'
    - 'extends'
    - 'liblist'
    - 'constraint'
    - 'extern'
    - 'library'
    - 'context'
    - 'final'
    - 'local'
    - 'continue'
    - 'first_match'
    - 'localparam'
    - 'cover'
    - 'for'
    - 'logic'
    - 'covergroup'
    - 'force'
    - 'longint'
    - 'coverpoint'
    - 'foreach'
    - 'macromodule'
    - 'cross'
    - 'forever'
    - 'matches'
    - 'deassign'
    - 'fork'
    - 'medium'
    - 'modport'
    - 'reject_on'
    - 'time'
    - 'module'
    - 'release'
    - 'timeprecision'
    - 'nand'
    - 'repeat'
    - 'timeunit'
    - 'negedge'
    - 'restrict'
    - 'tran'
    - 'nettype'
    - 'return'
    - 'tranif0'
    - 'new'
    - 'rnmos'
    - 'tranif1'
    - 'nexttime'
    - 'rpmos'
    - 'tri'
    - 'nmos'
    - 'rtran'
    - 'tri0'
    - 'nor'
    - 'rtranif0'
    - 'tri1'
    - 'noshowcancelled'
    - 'rtranif1'
    - 'triand'
    - 'not'
    - 's_always'
    - 'trior'
    - 'notif0'
    - 's_eventually'
    - 'trireg'
    - 'notif1'
    - 's_nexttime'
    - 'type'
    - 'null'
    - 's_until'
    - 'typedef'
    - 'or'
    - 's_until_with'
    - 'union'
    - 'output'
    - 'scalared'
    - 'unique'
    - 'package'
    - 'sequence'
    - 'unique0'
    - 'packed'
    - 'shortint'
    - 'unsigned'
    - 'parameter'
    - 'shortreal'
    - 'until'
    - 'pmos'
    - 'showcancelled'
    - 'until_with'
    - 'posedge'
    - 'signed'
    - 'untyped'
    - 'primitive'
    - 'small'
    - 'use'
    - 'priority'
    - 'soft'
    - 'uwire'
    - 'program'
    - 'solve'
    - 'var'
    - 'property'
    - 'specify'
    - 'vectored'
    - 'protected'
    - 'specparam'
    - 'virtual'
    - 'pull0'
    - 'static'
    - 'void'
    - 'pull1'
    - 'string'
    - 'wait'
    - 'pulldown'
    - 'strong'
    - 'wait_order'
    - 'pullup'
    - 'strong0'
    - 'wand'
    - 'pulsestyle_ondetect'
    - 'strong1'
    - 'weak'
    - 'pulsestyle_onevent'
    - 'struct'
    - 'weak0'
    - 'pure'
    - 'super'
    - 'weak1'
    - 'rand'
    - 'supply0'
    - 'while'
    - 'randc'
    - 'supply1'
    - 'wildcard'
    - 'randcase'
    - 'sync_accept_on'
    - 'wire'
    - 'randsequence'
    - 'sync_reject_on'
    - 'with'
    - 'rcmos'
    - 'table'
    - 'within'
    - 'real'
    - 'tagged'
    - 'wor'
    - 'realtime'
    - 'task'
    - 'xnor'
    - 'ref'
    - 'this'
    - 'xor'
    - 'reg'
    - 'throughout'
